	xtype: 'gridpanel',
    store: yourStore,
    title:'Panel title',
    columns: [{
    	id : 'department',
        text : 'Отдел',
        dataIndex: 'department',
        width: 300,
        sortable: false,
        editor: new Ext.form.field.ComboBox({
        	id: 'departmentEditor',
        	triggerAction: 'all',
        	store:  new Ext.data.JsonStore({
        		storeId : 'departmentGridStore',
        		proxy : {
        			type : 'ajax',
        			url : '/vtu/main/personel/GetDepartments',
        			extraParams: {
        				start: 0,
        				limit: 40,
        			},
        			reader : {
        				type : 'json',
        				root : 'departments',
        				idProperty : 'id',
        				totalProperty : 'total',
        			}
        		},
        		fields : [ 'id', 'department' ],
        		autoload : true,        			}),
            	displayField: 'department',
            	valueField: 'id',
            	editable: false,
        })
    } , {
    	id : 'positio	    n',
        text : 'Позиция',
        dataIndex: 'position',
         width: 300,
         sortable: false,
    	 editor: new Ext.form.field.ComboBox({
    		 id: 'positionEditor',
    	     triggerAction: 'all',
    	     store: new Ext.data.JsonStore({
    	    	 storeId : 'positionGridStore',
    	    	 proxy : {
    	    		 type : 'ajax',
    	    		 url : '/vtu/main/personel/GetPositions',
    	    		 extraParams: {
    	    			 start: 0,
    	    			 limit: 80,
    	    		 },
    	    		 reader : {
    	    			 type : 'json',
    	    			 root : 'positions',
    	    			 idProperty : 'id',
    	    			 totalProperty : 'total',
    	    		 }
    	    	 },
    	    	 fields : [ 'id', 'position' ],
    	    	 autoload : true,
    	     }),
    	     displayField: 'position',
    	     valueField: 'id',
    	     editable: false,
    	 })
    }],
    selModel: {
    	selType: 'cellmodel'
    },
    tbar: [{
    	text: 'Нова позиция',
    	handler : function() {
    		var r = Ext.create('EmploymentModel', {
    			department: 'Изберете отдел', 
    			position: 'Изберете позиция',
    		});
    		cellEditing.startEditByPosition({row: 0, column: 0});
    		employmentGridStore.insert(0, r);
    		Ext.getCmp('employmentGrid').on('edit', function(editor, e) {
	        // set correct field values else departmentId and
			// positionId are not defined
    			employmentGridStore.data.items[e.rowIdx].data.departmentId = editor.editors.items[0].field.value;
    			employmentGridStore.data.items[e.rowIdx].data.positionId = editor.editors.items[1].field.value;
	        });
    	}
    },{
    	text : 'Изтрий позиция',
    	handler : function(){
    		var r = Ext.getCmp('employmentGrid').getSelectionModel();
    	    if(r.selected.length) {
    	    	var employmentGrid = Ext.getCmp('employmentGrid');
    	    	employmentGridStore.removeAt(employmentGrid.getSelectionModel().selection.row);
    	    }
    	} 
    }],
    plugins: [cellEditing]